apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: sonarr-config
        image: docker.io/linuxserver/sonarr:latest
        imagePullPolicy: Always
        name: k8s-mediaserver
        ports:
        - containerPort: 8989
          name: sonarr-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 8989
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: mediaserver-volume
          subPath: config/sonarr
        - mountPath: /downloads
          name: mediaserver-volume
          subPath: downloads
        - mountPath: /tv
          name: mediaserver-volume
          subPath: media/tv
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mediaserver-volume
        persistentVolumeClaim:
          claimName: mediaserver-pvc-redux
      - configMap:
          defaultMode: 493
          name: init-sonarr-cm
        name: init-files-sonarr
